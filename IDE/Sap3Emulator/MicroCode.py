control_messages = [
    {"topic": "CPU.Halt", "label": "HLT"},
    {"topic": "CPU.Pause", "label": "WAIT"},
    {"topic": "CPU.Break", "label": "BRK"},

    {"topic": "CPU.MarIn", "label": "MI"},
    {"topic": "CPU.MemIn", "label": "RI"},
    {"topic": "CPU.MemOut", "label": "RO"},

    {"topic": "CPU.IrIn", "label": "II"},
    {"topic": "CPU.IrAlIn", "label": "IAL"},
    {"topic": "CPU.IrAhIn", "label": "IAH"},
    {"topic": "CPU.IrAddrIn", "label": "IAI"},
    {"topic": "CPU.IrOut", "label": "IO"},
    {"topic": "CPU.IrAlOut", "label": "IALO"},
    {"topic": "CPU.IrAhOut", "label": "IAHO"},

    {"topic": "CPU.ARegIn", "label": "AI"},
    {"topic": "CPU.ARegOut", "label": "AO"},
    {"topic": "CPU.BRegIn", "label": "BI"},
    {"topic": "CPU.BRegOut", "label": "BO"},
    {"topic": "CPU.CRegIn", "label": "CI"},
    {"topic": "CPU.CRegOut", "label": "CO"},
    {"topic": "CPU.DRegIn", "label": "DI"},
    {"topic": "CPU.DRegOut", "label": "DO"},
    {"topic": "CPU.ERegIn", "label": "EI"},
    {"topic": "CPU.ERegOut", "label": "EO"},
    {"topic": "CPU.HRegIn", "label": "HI"},
    {"topic": "CPU.HRegOut", "label": "HO"},
    {"topic": "CPU.LRegIn", "label": "LI"},
    {"topic": "CPU.LRegOut", "label": "LO"},

    {"topic": "CPU.AluAdd", "label": "ADD"},
    {"topic": "CPU.AluCma", "label": "CMA"},
    {"topic": "CPU.AluDec", "label": "DEC"},
    {"topic": "CPU.AluInc", "label": "INC"},
    {"topic": "CPU.AluLand", "label": "LAND"},
    {"topic": "CPU.AluLda", "label": "LDA"},
    {"topic": "CPU.AluLdb", "label": "LDB"},
    {"topic": "CPU.AluLdc", "label": "LDC"},
    {"topic": "CPU.AluLdd", "label": "LDD"},
    {"topic": "CPU.AluLde", "label": "LDE"},
    {"topic": "CPU.AluLdh", "label": "LDH"},
    {"topic": "CPU.AluLdl", "label": "LDL"},
    {"topic": "CPU.AluLor", "label": "LOR"},
    {"topic": "CPU.AluLxor", "label": "LXOR"},
    {"topic": "CPU.AluDaa", "label": "DAA"},
    {"topic": "CPU.AluIn", "label": "EI"},
    {"topic": "CPU.AluOut", "label": "EO"},
    {"topic": "CPU.AluRar", "label": "RAR"},
    {"topic": "CPU.AluRal", "label": "RAL"},
    {"topic": "CPU.AluUseCarry", "label": "USC"},
    {"topic": "CPU.AluSub", "label": "SUB"},

    {"topic": "CPU.TempIn", "label": "TI"},
    {"topic": "CPU.TempOut", "label": "TO"},
    {"topic": "CPU.TempZero", "label": "TZ"},

    {"topic": "CPU.OutputWrite", "label": "OO"},
    {"topic": "CPU.OutputSelect", "label": "OS"},

    {"topic": "CPU.InputRequest", "label": "NI"},
    {"topic": "CPU.InputResponse", "label": "NO"},
    {"topic": "CPU.InputSelect", "label": "NS"},

    {"topic": "CPU.PcOut", "label": "CO"},
    {"topic": "CPU.PcOutLow", "label": "COL"},
    {"topic": "CPU.PcOutHigh", "label": "COH"},
    {"topic": "CPU.PcInc", "label": "C+"},
    {"topic": "CPU.PcJump", "label": "CJ"},

    {"topic": "CPU.SpOut", "label": "SO"},
    {"topic": "CPU.SpIn", "label": "SI"},
    {"topic": "CPU.SpInc", "label": "S+"},
    {"topic": "CPU.SpDec", "label": "S-"},

    {"topic": "CPU.FlagIn", "label": "FI"},
    {"topic": "CPU.PswIn", "label": "FI"},
    {"topic": "CPU.PswOut", "label": "FO"},
    {"topic": "CPU.SetCarry", "label": "SC"},
    {"topic": "CPU.CompCarry", "label": "CC"},

    {"topic": "CPU.InteruptsOff", "label": "ID"},
    {"topic": "CPU.InteruptsOn", "label": "IE"},

    {"topic": "CPU.RingReset", "label": "RCR"},

    {"topic": "CPU.IllegalInst", "label": "ILL"}
]

decode_messages = {
    "CPU.Halt": "HLT ",
    "CPU.Pause": "WAIT ",
    "CPU.Break": "BRK ",
    "CPU.MarIn": "MI ",
    "CPU.MemIn": "RI ",
    "CPU.MemOut": "RO ",
    "CPU.IrIn": "II ",
    "CPU.IrAlIn": "IAL ",
    "CPU.IrAhIn": "IAH ",
    "CPU.IrOut": "IO ",
    "CPU.IrAddrIn": "IAI ",
    "CPU.IrAlOut": "IALO ",
    "CPU.IrAhOut": "IAHO ",
    "CPU.ARegIn": "AI ",
    "CPU.ARegOut": "AO ",
    "CPU.BRegIn": "BI ",
    "CPU.BRegOut": "BO ",
    "CPU.CRegIn": "CI ",
    "CPU.CRegOut": "CO ",
    "CPU.DRegIn": "DI ",
    "CPU.DRegOut": "DO ",
    "CPU.ERegIn": "EI ",
    "CPU.ERegOut": "EO ",
    "CPU.HRegIn": "HI ",
    "CPU.HRegOut": "HO ",
    "CPU.LRegIn": "LI ",
    "CPU.LRegOut": "LO ",
    "CPU.AluLda": "LDA ",
    "CPU.AluLdb": "LDB ",
    "CPU.AluLdc": "LDC ",
    "CPU.AluLdd": "LDD ",
    "CPU.AluLde": "LDE ",
    "CPU.AluLdh": "LDH ",
    "CPU.AluLdl": "LDL ",
    "CPU.AluLand": "LAND ",
    "CPU.AluLor": "LOR ",
    "CPU.AluLxor": "LXOR ",
    "CPU.AluDaa": "DAA ",
    "CPU.AluIn": "EI ",
    "CPU.AluOut": "EO ",
    "CPU.AluAdd": "ADD ",
    "CPU.AluSub": "SUB ",
    "CPU.AluDec": "DEC ",
    "CPU.AluInc": "INC ",
    "CPU.AluRar": "RAR ",
    "CPU.AluRal": "RAL ",
    "CPU.AluUseCarry": "USC ",
    "CPU.AluCma": "CMA ",
    "CPU.TempIn": "TI ",
    "CPU.TempOut": "TO ",
    "CPU.TempZero": "TZ ",
    "CPU.OutputWrite": "OO ",
    "CPU.OutputSelect": "OS ",
    "CPU.InputRequest": "NI ",
    "CPU.InputResponse": "NO ",
    "CPU.InputSelect": "NS ",
    "CPU.PcOut": "CO ",
    "CPU.PcOutLow": "COL ",
    "CPU.PcOutHigh": "COH ",
    "CPU.PcInc": "C+ ",
    "CPU.PcJump": "CJ ",
    "CPU.SpIn": "SI ",
    "CPU.SpOut": "SO ",
    "CPU.SpInc": "S+ ",
    "CPU.SpDec": "S- ",
    "CPU.FlagIn": "FI ",
    "CPU.PswIn": "FI ",
    "CPU.PswOut": "FO ",
    "CPU.SetCarry": "SC ",
    "CPU.CompCarry": "CC ",
    "CPU.InteruptsOff": "ID ",
    "CPU.InteruptsOn": "IE ",
    "CPU.RingReset": "RCR ",
    "CPU.IllegalInst": "ILL "
}

operators = {
    0x00: {"operator": "NOP", "op_code": 0x00, "operand1": None, "operand2": None, "addressing": "Non",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x01: {"operator": "LXI BC", "op_code": 0x01, "operand1": "BC", "operand2": "M", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.CRegIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.BRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x02: {"operator": "STAX BC", "op_code": 0x02, "operand1": "BC", "operand2": None, "addressing": "Ind",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.IrAlIn'],
                         ['CPU.BRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.ARegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x03: {"operator": "INX BC", "op_code": 0x03, "operand1": "BC", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdc', 'CPU.AluInc', 'CPU.AluOut', 'CPU.CRegIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdb', 'CPU.TempZero', 'CPU.AluAdd', 'CPU.AluOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x04: {"operator": "INR B", "op_code": 0x04, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdb', 'CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x05: {"operator": "DCR B", "op_code": 0x05, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdb', 'CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x06: {"operator": "MVI B", "op_code": 0x06, "operand1": "B", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.BRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x07: {"operator": "RLC", "op_code": 0x07, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda'],
                         ['CPU.AluRal', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x09: {"operator": "DAD BC", "op_code": 0x09, "operand1": "BC", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluLdl', 'CPU.AluAdd', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdh', 'CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x0A: {"operator": "LDAX BC", "op_code": 0x0A, "operand1": "BC", "operand2": None, "addressing": "Ind",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.IrAlIn'],
                         ['CPU.BRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x0B: {"operator": "DCX BC", "op_code": 0x0B, "operand1": "BC", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdc', 'CPU.AluDec', 'CPU.AluOut', 'CPU.CRegIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdb', 'CPU.TempZero', 'CPU.AluSub', 'CPU.AluOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x0C: {"operator": "INR C", "op_code": 0x0C, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdc', 'CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x0D: {"operator": "DCR C", "op_code": 0x0D, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdc', 'CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x0E: {"operator": "MVI C", "op_code": 0x0E, "operand1": "C", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.CRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x0F: {"operator": "RRC", "op_code": 0x0F, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda'],
                         ['CPU.AluRar', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x11: {"operator": "LXI DE", "op_code": 0x11, "operand1": "DE", "operand2": "M", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ERegIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.DRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x12: {"operator": "STAX DE", "op_code": 0x12, "operand1": "DE", "operand2": None, "addressing": "Ind",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.IrAlIn'],
                         ['CPU.DRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.ARegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x13: {"operator": "INX DE", "op_code": 0x13, "operand1": "DE", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLde', 'CPU.AluInc', 'CPU.AluOut', 'CPU.ERegIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdd', 'CPU.TempZero', 'CPU.AluAdd', 'CPU.AluOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x14: {"operator": "INR D", "op_code": 0x14, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdd', 'CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x15: {"operator": "DCR D", "op_code": 0x15, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdd', 'CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x16: {"operator": "MVI D", "op_code": 0x16, "operand1": "D", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.DRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x17: {"operator": "RAL", "op_code": 0x17, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda'],
                         ['CPU.AluRal', 'CPU.FlagIn'],
                         ['CPU.AluUseCarry', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x19: {"operator": "DAD DE", "op_code": 0x19, "operand1": "DE", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluLdl', 'CPU.AluAdd', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdh', 'CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x1A: {"operator": "LDAX DE", "op_code": 0x1A, "operand1": "DE", "operand2": None, "addressing": "Ind",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.IrAlIn'],
                         ['CPU.DRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x1B: {"operator": "DCX DE", "op_code": 0x1B, "operand1": "DE", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLde', 'CPU.AluDec', 'CPU.AluOut', 'CPU.ERegIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdd', 'CPU.TempZero', 'CPU.AluSub', 'CPU.AluOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x1C: {"operator": "INR E", "op_code": 0x1C, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLde', 'CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x1D: {"operator": "DCR E", "op_code": 0x1D, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLde', 'CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x1E: {"operator": "MVI E", "op_code": 0x1E, "operand1": "E", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ERegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x1F: {"operator": "RAR", "op_code": 0x1F, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda'],
                         ['CPU.AluUseCarry', 'CPU.AluRar', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x21: {"operator": "LXI HL", "op_code": 0x21, "operand1": "HL", "operand2": "M", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.LRegIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.HRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},

    0x23: {"operator": "INX HL", "op_code": 0x23, "operand1": "HL", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdl', 'CPU.AluInc', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdh', 'CPU.TempZero', 'CPU.AluAdd', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x24: {"operator": "INR H", "op_code": 0x24, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdh', 'CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x25: {"operator": "DCR H", "op_code": 0x25, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdh', 'CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x26: {"operator": "MVI H", "op_code": 0x26, "operand1": "H", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.HRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x27: {"operator": "DAA", "op_code": 0x27, "operand1": None, "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda'],
                         ['CPU.AluDaa', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x29: {"operator": "DAD HL", "op_code": 0x29, "operand1": "HL", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluLdl', 'CPU.AluAdd', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdh', 'CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},

    0x2B: {"operator": "DCX HL", "op_code": 0x2B, "operand1": "HL", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdl', 'CPU.AluDec', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdh', 'CPU.TempZero', 'CPU.AluSub', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x2C: {"operator": "INR L", "op_code": 0x2C, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdl', 'CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x2D: {"operator": "DCR L", "op_code": 0x2D, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLdl', 'CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x2E: {"operator": "MVI L", "op_code": 0x2E, "operand1": "L", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.LRegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x2F: {"operator": "CMA", "op_code": 0x2F, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda'],
                         ['CPU.AluCma', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x31: {"operator": "LXI SP", "op_code": 0x31, "operand1": "SP", "operand2": "M", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAhIn', 'CPU.PcInc'],
                         ['CPU.IrOut', 'CPU.SpIn'],
                         ['CPU.RingReset']]},

    0x32: {"operator": "STA", "op_code": 0x32, "operand1": "M", "operand2": None, "addressing": "Dir",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAhIn', 'CPU.PcInc'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.ARegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x33: {"operator": "INX SP", "op_code": 0x33, "operand1": "SP", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpInc'],
                         ['CPU.RingReset']]},
    0x34: {"operator": "INR M", "op_code": 0x34, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.AluIn'],
                         ['CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x35: {"operator": "DCR M", "op_code": 0x35, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.AluIn'],
                         ['CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x36: {"operator": "MVI M", "op_code": 0x36, "operand1": "M", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.TempOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x37: {"operator": "STC", "op_code": 0x37, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SetCarry'],
                         ['CPU.RingReset']]},

    0x39: {"operator": "DAD SP", "op_code": 0x39, "operand1": "SP", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpOut', 'CPU.IrAddrIn'],
                         ['CPU.IrAlOut', 'CPU.TempIn'],
                         ['CPU.AluLdl', 'CPU.AluAdd', 'CPU.AluOut', 'CPU.LRegIn'],
                         ['CPU.IrAhOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluLdh', 'CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x3A: {"operator": "LDA", "op_code": 0x3A, "operand1": "M", "operand2": None, "addressing": "Dir",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAhIn', 'CPU.PcInc'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x3B: {"operator": "DCX SP", "op_code": 0x3B, "operand1": "SP", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec'],
                         ['CPU.RingReset']]},
    0x3C: {"operator": "INR A", "op_code": 0x3C, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.AluInc', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x3D: {"operator": "DCR A", "op_code": 0x3D, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.AluDec', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x3E: {"operator": "MVI A", "op_code": 0x3E, "operand1": "A", "operand2": "N", "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ARegIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0x3F: {"operator": "CMC", "op_code": 0x3F, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CompCarry'],
                         ['CPU.RingReset']]},

    0x40: {"operator": "MOV B,B", "op_code": 0x40, "operand1": "B", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.BRegOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x41: {"operator": "MOV B,C", "op_code": 0x41, "operand1": "B", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x42: {"operator": "MOV B,D", "op_code": 0x42, "operand1": "B", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.DRegOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x43: {"operator": "MOV B,E", "op_code": 0x43, "operand1": "B", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x44: {"operator": "MOV B,H", "op_code": 0x44, "operand1": "B", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x45: {"operator": "MOV B,L", "op_code": 0x45, "operand1": "B", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x46: {"operator": "MOV B,M", "op_code": 0x46, "operand1": "B", "operand2": "M", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x47: {"operator": "MOV B,A", "op_code": 0x47, "operand1": "B", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ARegOut', 'CPU.BRegIn'],
                         ['CPU.RingReset']]},
    0x48: {"operator": "MOV C,B", "op_code": 0x48, "operand1": "C", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.BRegOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x49: {"operator": "MOV C,C", "op_code": 0x49, "operand1": "C", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x4A: {"operator": "MOV C,D", "op_code": 0x4A, "operand1": "C", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.DRegOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x4B: {"operator": "MOV C,E", "op_code": 0x4B, "operand1": "C", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x4C: {"operator": "MOV C,H", "op_code": 0x4C, "operand1": "C", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x4D: {"operator": "MOV C,L", "op_code": 0x4D, "operand1": "C", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x4E: {"operator": "MOV C,M", "op_code": 0x4E, "operand1": "C", "operand2": "M", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},
    0x4F: {"operator": "MOV C,A", "op_code": 0x4F, "operand1": "C", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ARegOut', 'CPU.CRegIn'],
                         ['CPU.RingReset']]},

    0x50: {"operator": "MOV D,B", "op_code": 0x50, "operand1": "D", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.BRegOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x51: {"operator": "MOV D,C", "op_code": 0x51, "operand1": "D", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x52: {"operator": "MOV D,D", "op_code": 0x52, "operand1": "D", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.DRegOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x53: {"operator": "MOV D,E", "op_code": 0x53, "operand1": "D", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x54: {"operator": "MOV D,H", "op_code": 0x54, "operand1": "D", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x55: {"operator": "MOV D,L", "op_code": 0x55, "operand1": "D", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x56: {"operator": "MOV D,M", "op_code": 0x56, "operand1": "D", "operand2": "M", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x57: {"operator": "MOV D,A", "op_code": 0x57, "operand1": "D", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ARegOut', 'CPU.DRegIn'],
                         ['CPU.RingReset']]},
    0x58: {"operator": "MOV E,B", "op_code": 0x58, "operand1": "E", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.BRegOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x59: {"operator": "MOV E,C", "op_code": 0x59, "operand1": "E", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x5A: {"operator": "MOV E,D", "op_code": 0x5A, "operand1": "E", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.DRegOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x5B: {"operator": "MOV E,E", "op_code": 0x5B, "operand1": "E", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x5C: {"operator": "MOV E,H", "op_code": 0x5C, "operand1": "E", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x5D: {"operator": "MOV E,L", "op_code": 0x5D, "operand1": "E", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x5E: {"operator": "MOV E,M", "op_code": 0x5E, "operand1": "E", "operand2": "M", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0x5F: {"operator": "MOV E,A", "op_code": 0x5F, "operand1": "E", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ARegOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},

    0x60: {"operator": "MOV H,B", "op_code": 0x60, "operand1": "H", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.BRegOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x61: {"operator": "MOV H,C", "op_code": 0x61, "operand1": "H", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x62: {"operator": "MOV H,D", "op_code": 0x62, "operand1": "H", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.DRegOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x63: {"operator": "MOV H,E", "op_code": 0x63, "operand1": "H", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x64: {"operator": "MOV H,H", "op_code": 0x64, "operand1": "H", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x65: {"operator": "MOV H,L", "op_code": 0x65, "operand1": "H", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x66: {"operator": "MOV H,M", "op_code": 0x66, "operand1": "H", "operand2": "M", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x67: {"operator": "MOV H,A", "op_code": 0x67, "operand1": "H", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ARegOut', 'CPU.HRegIn'],
                         ['CPU.RingReset']]},
    0x68: {"operator": "MOV L,B", "op_code": 0x68, "operand1": "L", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.BRegOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x69: {"operator": "MOV L,C", "op_code": 0x69, "operand1": "L", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x6A: {"operator": "MOV L,D", "op_code": 0x6A, "operand1": "L", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.DRegOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x6B: {"operator": "MOV L,E", "op_code": 0x6B, "operand1": "L", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x6C: {"operator": "MOV L,H", "op_code": 0x6C, "operand1": "L", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x6D: {"operator": "MOV L,L", "op_code": 0x6D, "operand1": "L", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x6E: {"operator": "MOV L,M", "op_code": 0x6E, "operand1": "L", "operand2": "M", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0x6F: {"operator": "MOV L,A", "op_code": 0x6F, "operand1": "E", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ARegOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},

    0x70: {"operator": "MOV M,B", "op_code": 0x70, "operand1": "M", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.BRegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x71: {"operator": "MOV M,C", "op_code": 0x71, "operand1": "M", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.CRegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x72: {"operator": "MOV M,D", "op_code": 0x72, "operand1": "M", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.DRegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x73: {"operator": "MOV M,E", "op_code": 0x73, "operand1": "M", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.ERegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x74: {"operator": "MOV M,H", "op_code": 0x74, "operand1": "M", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.HRegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x75: {"operator": "MOV M,L", "op_code": 0x75, "operand1": "M", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.LRegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x76: {"operator": "HLT", "op_code": 0x76, "operand1": None, "operand2": None, "addressing": "Non",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.Halt'],
                         ['CPU.RingReset']]},
    0x77: {"operator": "MOV M,A", "op_code": 0x77, "operand1": "M", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.ARegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0x78: {"operator": "MOV A,B", "op_code": 0x78, "operand1": "A", "operand2": "B", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.BRegOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x79: {"operator": "MOV A,C", "op_code": 0x79, "operand1": "A", "operand2": "C", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.CRegOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x7A: {"operator": "MOV A,D", "op_code": 0x7A, "operand1": "A", "operand2": "D", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.DRegOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x7B: {"operator": "MOV A,E", "op_code": 0x7B, "operand1": "A", "operand2": "E", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ERegOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x7C: {"operator": "MOV A,H", "op_code": 0x7C, "operand1": "A", "operand2": "H", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x7D: {"operator": "MOV A,L", "op_code": 0x7D, "operand1": "A", "operand2": "L", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x7E: {"operator": "MOV A,M", "op_code": 0x7E, "operand1": "A", "operand2": "M", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x7F: {"operator": "MOV A,A", "op_code": 0x7F, "operand1": "A", "operand2": "A", "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.ARegOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x80: {"operator": "ADD B", "op_code": 0x80, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x81: {"operator": "ADD C", "op_code": 0x81, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x82: {"operator": "ADD D", "op_code": 0x82, "operand1": "DC", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x83: {"operator": "ADD E", "op_code": 0x83, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x84: {"operator": "ADD H", "op_code": 0x84, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x85: {"operator": "ADD L", "op_code": 0x85, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x86: {"operator": "ADD M", "op_code": 0x86, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x87: {"operator": "ADD A", "op_code": 0x87, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x88: {"operator": "ADC B", "op_code": 0x88, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x89: {"operator": "ADC C", "op_code": 0x89, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x8A: {"operator": "ADC D", "op_code": 0x8A, "operand1": "DC", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x8B: {"operator": "ADC E", "op_code": 0x8B, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x8C: {"operator": "ADC H", "op_code": 0x8C, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x8D: {"operator": "ADC L", "op_code": 0x8D, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x8E: {"operator": "ADC M", "op_code": 0x8E, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x8F: {"operator": "ADC A", "op_code": 0x8F, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0x90: {"operator": "SUB B", "op_code": 0x90, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x91: {"operator": "SUB C", "op_code": 0x91, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x92: {"operator": "SUB D", "op_code": 0x92, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x93: {"operator": "SUB E", "op_code": 0x93, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x94: {"operator": "SUB H", "op_code": 0x94, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x95: {"operator": "SUB L", "op_code": 0x95, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x96: {"operator": "SUB M", "op_code": 0x96, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x97: {"operator": "SUB A", "op_code": 0x97, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x98: {"operator": "SBB B", "op_code": 0x98, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x99: {"operator": "SBB C", "op_code": 0x99, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x9A: {"operator": "SBB D", "op_code": 0x9A, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x9B: {"operator": "SBB E", "op_code": 0x9B, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x9C: {"operator": "SBB H", "op_code": 0x9C, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x9D: {"operator": "SBB L", "op_code": 0x9D, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x9E: {"operator": "SBB M", "op_code": 0x9E, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0x9F: {"operator": "SBB A", "op_code": 0x9F, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0xA0: {"operator": "ANA B", "op_code": 0xA0, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA1: {"operator": "ANA C", "op_code": 0xA1, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA2: {"operator": "ANA D", "op_code": 0xA2, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA3: {"operator": "ANA E", "op_code": 0xA3, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA4: {"operator": "ANA H", "op_code": 0xA4, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA5: {"operator": "ANA L", "op_code": 0xA5, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA6: {"operator": "ANA M", "op_code": 0xA6, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA7: {"operator": "ANA A", "op_code": 0xA7, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluLand', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA8: {"operator": "XRA B", "op_code": 0xA8, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xA9: {"operator": "XRA C", "op_code": 0xA9, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xAA: {"operator": "XRA D", "op_code": 0xAA, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xAB: {"operator": "XRA E", "op_code": 0xAB, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xAC: {"operator": "XRA H", "op_code": 0xAC, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xAD: {"operator": "XRA L", "op_code": 0xAD, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xAE: {"operator": "XRA M", "op_code": 0xAE, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xAF: {"operator": "XRA A", "op_code": 0xAF, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},

    0xB0: {"operator": "ORA B", "op_code": 0xB0, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB1: {"operator": "ORA C", "op_code": 0xB1, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB2: {"operator": "ORA D", "op_code": 0xB2, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB3: {"operator": "ORA E", "op_code": 0xB3, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB4: {"operator": "ORA H", "op_code": 0xB4, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB5: {"operator": "ORA L", "op_code": 0xB5, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB6: {"operator": "ORA M", "op_code": 0xB6, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB7: {"operator": "ORA A", "op_code": 0xB7, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xB8: {"operator": "CMP B", "op_code": 0xB8, "operand1": "B", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.BRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xB9: {"operator": "CMP C", "op_code": 0xB9, "operand1": "C", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.CRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xBA: {"operator": "CMP D", "op_code": 0xBA, "operand1": "D", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.DRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xBB: {"operator": "CMP E", "op_code": 0xBB, "operand1": "E", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ERegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xBC: {"operator": "CMP H", "op_code": 0xBC, "operand1": "H", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xBD: {"operator": "CMP L", "op_code": 0xBD, "operand1": "L", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xBE: {"operator": "CMP M", "op_code": 0xBE, "operand1": "M", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.LRegOut', 'CPU.IrAlIn'],
                         ['CPU.HRegOut', 'CPU.IrAhIn'],
                         ['CPU.IrOut', 'CPU.MarIn'],
                         ['CPU.AluLda', 'CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xBF: {"operator": "CMP A", "op_code": 0xBF, "operand1": "A", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.AluLda', 'CPU.ARegOut', 'CPU.TempIn'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},

    0xC0: {"operator": "RNZ", "op_code": 0xC0, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xC1: {"operator": "POP BC", "op_code": 0xC1, "operand1": "BC", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.CRegIn', 'CPU.SpInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.BRegIn', 'CPU.SpInc'],
                         ['CPU.RingReset']]},
    0xC2: {"operator": "JNZ", "op_code": 0xC2, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xC3: {"operator": "JMP", "op_code": 0xC3, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAhIn', 'CPU.PcInc'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},
    0xC4: {"operator": "CNZ", "op_code": 0xC4, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xC5: {"operator": "PUSH BC", "op_code": 0xC5, "operand1": "BC", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.BRegOut', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.CRegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0xC6: {"operator": "ADI", "op_code": 0xC6, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluAdd', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xC7: {"operator": "RST 0", "op_code": 0xC7, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},
    0xC8: {"operator": "RZ", "op_code": 0xC8, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xC9: {"operator": "RET", "op_code": 0xC9, "operand1": None, "operand2": None, "addressing": "Imp",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.SpInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAhIn', 'CPU.SpInc'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},
    0xCA: {"operator": "JZ", "op_code": 0xCA, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},

    0xCC: {"operator": "CZ", "op_code": 0xCC, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xCD: {"operator": "CALL", "op_code": 0xCD, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAhIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},
    0xCE: {"operator": "ACI", "op_code": 0xCE, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluUseCarry', 'CPU.AluAdd', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xCF: {"operator": "RST 1", "op_code": 0xCF, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},

    0xD0: {"operator": "RNC", "op_code": 0xD0, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xD1: {"operator": "POP DE", "op_code": 0xD1, "operand1": "DE", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         [ 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ERegIn', 'CPU.SpInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.DRegIn', 'CPU.SpInc'],
                         ['CPU.RingReset']]},
    0xD2: {"operator": "JNC", "op_code": 0xD2, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xD3: {"operator": "OUT", "op_code": 0xD3, "operand1": "N", "operand2": None, "addressing": "Dir",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.PcInc'],
                         ['CPU.IrOut', 'CPU.OutputSelect'],
                         ['CPU.ARegOut', 'CPU.OutputWrite'],
                         ['CPU.RingReset']]},
    0xD4: {"operator": "CNC", "op_code": 0xD4, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xD5: {"operator": "PUSH DE", "op_code": 0xD5, "operand1": "DE", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.DRegOut', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.ERegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0xD6: {"operator": "SUI", "op_code": 0xD6, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluSub', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xD7: {"operator": "RST 2", "op_code": 0xD7, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},
    0xD8: {"operator": "RC", "op_code": 0xD8, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},

    0xDA: {"operator": "JC", "op_code": 0xDA, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xDB: {"operator": "IN", "op_code": 0xDB, "operand1": "N", "operand2": None, "addressing": "Dir",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrAlIn', 'CPU.PcInc'],
                         ['CPU.IrOut', 'CPU.InputSelect'],
                         ['CPU.InputRequest'],
                         ['CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xDC: {"operator": "CC", "op_code": 0xDC, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},

    0xDE: {"operator": "SBI", "op_code": 0xDE, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn'],
                         ['CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluUseCarry', 'CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xDF: {"operator": "RST 3", "op_code": 0xDF, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},

    0xE0: {"operator": "RPO", "op_code": 0xE0, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xE1: {"operator": "POP HL", "op_code": 0xE1, "operand1": "HL", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.LRegIn', 'CPU.SpInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.HRegIn', 'CPU.SpInc'],
                         ['CPU.RingReset']]},
    0xE2: {"operator": "JPO", "op_code": 0xE2, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xE3: {"operator": "XTHL", "op_code": 0xE3, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.SpInc'],
                         ['CPU.LRegOut', 'CPU.MemIn'],
                         ['CPU.TempOut', 'CPU.LRegIn'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.SpDec'],
                         ['CPU.HRegOut', 'CPU.MemIn'],
                         ['CPU.TempOut', 'CPU.LRegIn'],
                         ['CPU.RingReset']]},
    0xE4: {"operator": "CPO", "op_code": 0xE4, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xE5: {"operator": "PUSH HL", "op_code": 0xE5, "operand1": "HL", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.HRegOut', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.LRegOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0xE6: {"operator": "ANI", "op_code": 0xE6, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluLand', 'CPU.FlagIn'],
                         ['CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xE7: {"operator": "RST 4", "op_code": 0xE7, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},
    0xE8: {"operator": "RPE", "op_code": 0xE8, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},

    0xEA: {"operator": "JPE", "op_code": 0xEA, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xEB: {"operator": "XCHG", "op_code": 0xEB, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.HRegOut', 'CPU.TempIn'],
                         ['CPU.DRegOut', 'CPU.HRegIn'],
                         ['CPU.TempOut', 'CPU.DRegIn'],
                         ['CPU.LRegOut', 'CPU.TempIn'],
                         ['CPU.ERegOut', 'CPU.LRegIn'],
                         ['CPU.TempOut', 'CPU.ERegIn'],
                         ['CPU.RingReset']]},
    0xEC: {"operator": "CPE", "op_code": 0xEC, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},

    0xEE: {"operator": "XRI", "op_code": 0xEE, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluLxor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xEF: {"operator": "RST 5", "op_code": 0xEF, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},

    0xF0: {"operator": "RP", "op_code": 0xF0, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xF1: {"operator": "POP PSW", "op_code": 0xF1, "operand1": "PSW", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.PswIn', 'CPU.SpInc'],
                         ['CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.ARegIn', 'CPU.SpInc'],
                         ['CPU.RingReset']]},
    0xF2: {"operator": "JP", "op_code": 0xF2, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xF3: {"operator": "DI", "op_code": 0xF3, "operand1": None, "operand2": None, "addressing": "Non",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.InteruptsOff'],
                         ['CPU.RingReset']]},
    0xF4: {"operator": "CP", "op_code": 0xF4, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xF5: {"operator": "PUSH PSW", "op_code": 0xF5, "operand1": "PSW", "operand2": None, "addressing": "Reg",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.ARegOut', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PswOut', 'CPU.MemIn'],
                         ['CPU.RingReset']]},
    0xF6: {"operator": "ORI", "op_code": 0xF6, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluLor', 'CPU.FlagIn', 'CPU.AluOut', 'CPU.ARegIn'],
                         ['CPU.RingReset']]},
    0xF7: {"operator": "RST 6", "op_code": 0xF7, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]},
    0xF8: {"operator": "RM", "op_code": 0xF8, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.RingReset']]},

    0xFA: {"operator": "JM", "op_code": 0xFA, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},
    0xFB: {"operator": "EI", "op_code": 0xFB, "operand1": None, "operand2": None, "addressing": "Non",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.InteruptsOn'],
                         ['CPU.RingReset']]},
    0xFC: {"operator": "CM", "op_code": 0xFC, "operand1": "M", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.PcInc'],
                         ['CPU.RingReset']]},

    0xFE: {"operator": "CPI", "op_code": 0xFE, "operand1": "N", "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.TempIn', 'CPU.PcInc', 'CPU.AluLda'],
                         ['CPU.AluSub', 'CPU.FlagIn'],
                         ['CPU.RingReset']]},
    0xFF: {"operator": "RST 7", "op_code": 0xFF, "operand1": None, "operand2": None, "addressing": "Imm",
           "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                         ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutHigh', 'CPU.MemIn'],
                         ['CPU.SpDec', 'CPU.SpOut', 'CPU.MarIn'],
                         ['CPU.PcOutLow', 'CPU.MemIn'],
                         ['CPU.IrOut', 'CPU.PcJump'],
                         ['CPU.RingReset']]}
}

invalid_operator = {"operator": "***", "op_code": 0x00, "operand1": None, "operand2": None, "addressing": "Non",
                    "microcode": [['CPU.PcOut', 'CPU.MarIn'],
                                  ['CPU.MemOut', 'CPU.IrIn', 'CPU.PcInc'],
                                  ['CPU.IllegalInst', 'CPU.Halt'],
                                  ['CPU.RingReset']]}

CALL_OP_CODE = 0xCD
JUMP_OP_CODE = 0xC3
RETURN_OP_CODE = 0xC9
RST_OP_CODE_MASK = 0xC7
RST_ADDR_MASK = 0x38

class MicroCode:
    def __init__(self):
        self.current_operator = operators[0]
        self.current_microcode = self.current_operator["microcode"]
        self.call_address = 0

    def process_carry_modifier(self, op_code, carry_flag):
        # Jump related instructions
        # JNC - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xD2 and not carry_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # JC - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xDA and carry_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # Call related instructions
        # CNC - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xD4 and not carry_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # CC - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xDC and carry_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # Return relaged instructions
        # RNC - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xD0 and not carry_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

        # RC - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xD8 and carry_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

    def process_zero_modifier(self, op_code, zero_flag):
        # Jump related instructions
        # JNZ - If this is the Jump if Not Zero and zero flag is clear Just use the Jump Microcode
        if op_code == 0xC2 and not zero_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # JZ - If this is the Jump if Zero and zero flag is set Just use the Jump Microcode
        if op_code == 0xCA and zero_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # Call related instructions
        # CNZ - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xC4 and not zero_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # CZ - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xCC and zero_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # Return relaged instructions
        # RNZ - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xC0 and not zero_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

        # RZ - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xC8 and zero_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

    def process_sign_modifier(self, op_code, sign_flag):
        # Jump related instructions
        # JP - If this is the Jump if Plus and sign flag is not set Just use the Jump Microcode
        if op_code == 0xF2 and not sign_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # JM - If this is the Jump if minus and sign flag is set Just use the Jump Microcode
        if op_code == 0xFA and sign_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # Call related instructions
        # CP - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xF4 and not sign_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # CM - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xFC and sign_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # Return relaged instructions
        # RP - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xF0 and not sign_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

        # RM - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xF8 and sign_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

    def process_parity_modifier(self, op_code, parity_flag):
        # Jump related instructions
        # JP - If this is the Jump if Parity Odd and parity flag is not set Just use the Jump Microcode
        if op_code == 0xE2 and not parity_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # JM - If this is the Jump if Parity Even and parity flag is set Just use the Jump Microcode
        if op_code == 0xEA and parity_flag:
            self.current_microcode = operators[JUMP_OP_CODE]["microcode"]

        # Call related instructions
        # CPO - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xE4 and not parity_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # CPE - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xEC and parity_flag:
            self.current_microcode = operators[CALL_OP_CODE]["microcode"]

        # Return relaged instructions
        # RPO - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xE0 and not parity_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

        # RPE - If this is the Jump if Carry and carry flag is set Just use the Jump Microcode
        if op_code == 0xE8 and parity_flag:
            self.current_microcode = operators[RETURN_OP_CODE]["microcode"]

    def decode_op_code(self, op_code, carry_flag=False, zero_flag=False, sign_flag=False, parity_flag=False,
                       auxillary_carry_flag=False):
        self.call_address = 0
        if op_code in operators:
            self.current_operator = operators[op_code]
            self.current_microcode = self.current_operator["microcode"]

            if op_code & RST_OP_CODE_MASK == RST_OP_CODE_MASK:
                self.call_address = op_code & RST_ADDR_MASK
            else:
                self.process_carry_modifier(op_code, carry_flag)
                self.process_zero_modifier(op_code, zero_flag)
                self.process_sign_modifier(op_code, sign_flag)
                self.process_parity_modifier(op_code, parity_flag)

        else:
            self.current_operator = invalid_operator
            self.current_microcode = self.current_operator["microcode"]

    def get_current_operator(self):
        return self.current_operator

    def get_current_microcode(self):
        return self.current_microcode

    def get_current_call_address(self):
        return self.call_address
